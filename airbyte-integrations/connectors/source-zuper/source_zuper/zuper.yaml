version: "0.1.0"

definitions:
  selector:
    type: RecordSelector
    extractor:
      type: DpathExtractor
      field_pointer: [ "data" ]
  requester:
    type: HttpRequester
    url_base: "https://us-west-1c.zuperpro.com/api"
    http_method: "GET"
    authenticator:
      type: ApiKeyAuthenticator
      header: "x-api-key"
      api_token: "{{ config['api_key'] }}"
    request_options_provider:
      request_parameters:
        page: "{{ 1 if next_page_token['next_page_token'] is not defined }}"
  paginator:
    type: DefaultPaginator
    url_base: "*ref(definitions.requester.url_base)"
    pagination_strategy:
      type: "PageIncrement"
      start_from_page: 1
      page_size: 10
    page_size_option:
      inject_into: request_parameter
      field_name: count
    page_token_option:
      inject_into: request_parameter
      field_name: page
  stream_slicer:
    type: "DatetimeStreamSlicer"
    start_datetime:
      datetime: "{{ config['start_date'] }}"
      datetime_format: "%Y-%m-%d"
    end_datetime:
      datetime: "{{ today_utc() }}"
      datetime_format: "%Y-%m-%d"
    start_time_option:
      field_name: "filter.created_at_from"
      inject_into: "request_parameter"
    end_time_option:
      field_name: "filter.created_at_to"
      inject_into: "request_parameter"
    datetime_format: "%Y-%m-%dT%H:%M:%S.%f%z"
    step: "P7D"
    cursor_granularity: "P1D"
    cursor_field: "{{ options['stream_cursor_field'] }}"
  retriever:
    type: SimpleRetriever
    record_selector:
      $ref: "*ref(definitions.selector)"
    paginator:
      $ref: "*ref(definitions.paginator)"
    requester:
      $ref: "*ref(definitions.requester)"
  base_stream:
    type: DeclarativeStream
    retriever:
      $ref: "*ref(definitions.retriever)"
  assets_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "assets"
      primary_key: "asset_uid"
      path: "/assets"
  customers_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "customers"
      primary_key: "customer_uid"
      path: "/customers"
  invoices_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "invoices"
      primary_key: "invoice_uid"
      path: "/invoice"
  jobs_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "jobs"
      primary_key: "job_uid"
      path: "/jobs"
      stream_cursor_field: "created_at"
    retriever:
      $ref: "*ref(definitions.retriever)"
      stream_slicer:
        $ref: "*ref(definitions.stream_slicer)"
  organizations_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "organizations"
      primary_key: "organization_uid"
      path: "/organization"
  parts_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "parts"
      primary_key: "product_uid"
      path: "/product"
  part_transactions_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "part_transactions"
      primary_key: "transaction_uid"
      path: "/product/transaction"
      stream_cursor_field: "created_at"
      retriever:
        $ref: "*ref(definitions.retriever)"
        stream_slicer:
          $ref: "*ref(definitions.stream_slicer)"
  ppms_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "ppms"
      primary_key: "ppm_uid"
      path: "/ppm"
  properties_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "properties"
      primary_key: "property_uid"
      path: "/property"
  teams_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "teams"
      primary_key: "team_uid"
      path: "/teams/summary"
  users_stream:
    $ref: "*ref(definitions.base_stream)"
    $options:
      name: "users"
      primary_key: "user_uid"
      path: "/user/all"


streams:
  - "*ref(definitions.assets_stream)"
  - "*ref(definitions.customers_stream)"
  - "*ref(definitions.invoices_stream)"
  - "*ref(definitions.jobs_stream)"
  - "*ref(definitions.organizations_stream)"
  - "*ref(definitions.parts_stream)"
  - "*ref(definitions.part_transactions_stream)"
  - "*ref(definitions.ppms_stream)"
  - "*ref(definitions.properties_stream)"
  - "*ref(definitions.teams_stream)"
  - "*ref(definitions.users_stream)"


check:
  stream_names:
    - "customers"

spec:
  documentation_url: https://docs.airbyte.com/integrations/sources/braze
  connection_specification:
    $schema: http://json-schema.org/draft-07/schema#
    title: Zuper Spec
    type: object
    required:
      - api_key
      - start_date
    additionalProperties: true
    properties:
      start_date:
        type: string
        description: Start getting data from that date.
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
        examples:
          - YYYY-MM-DD
      api_key:
        type: string
        title: API Key
        description: API Key
        airbyte_secret: true
